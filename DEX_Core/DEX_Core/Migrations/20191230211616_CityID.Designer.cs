// <auto-generated />
using DEX_Core_WebAPI.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DEX_Core_WebAPI.Migrations
{
    [DbContext(typeof(Dex_CoreDbContext))]
    [Migration("20191230211616_CityID")]
    partial class CityID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DEX_Core_WebAPI.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wellington"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "New York"
                        });
                });

            modelBuilder.Entity("DEX_Core_WebAPI.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CityId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Datacom"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Name = "Fujitsu"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Name = "MetLife"
                        });
                });

            modelBuilder.Entity("DEX_Core_WebAPI.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            EmailAddress = "johndoe@nowhere.com",
                            Name = "Person 1"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            EmailAddress = "johndoe@nowhere.com",
                            Name = "Person 2"
                        });
                });

            modelBuilder.Entity("DEX_Core_WebAPI.Models.Contact", b =>
                {
                    b.HasOne("DEX_Core_WebAPI.Models.Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
